import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class Expense {
    private String date;
    private String category;
    private double amount;

    public Expense(String date, String category, double amount) {
        this.date = date;
        this.category = category;
        this.amount = amount;
    }

    public String getDate() {
        return date;
    }

    public String getCategory() {
        return category;
    }

    public double getAmount() {
        return amount;
    }

    @Override
    public String toString() {
        return "Date: " + date + ", Category: " + category + ", Amount: $" + amount;
    }
}

class ExpenseTracker {
    private List<Expense> expenses;
    private Map<String, Double> categoryTotal;

    public ExpenseTracker() {
        expenses = new ArrayList<>();
        categoryTotal = new HashMap<>();
    }

    public void addExpense(Expense expense) {
        expenses.add(expense);

        // Update category-wise total expenses
        categoryTotal.put(expense.getCategory(), categoryTotal.getOrDefault(expense.getCategory(), 0.0) + expense.getAmount());
    }

    public List<Expense> getExpenses() {
        return expenses;
    }

    public void displayExpenses() {
        for (Expense expense : expenses) {
            System.out.println(expense);
        }
    }

    public void displayCategoryTotal() {
        for (Map.Entry<String, Double> entry : categoryTotal.entrySet()) {
            System.out.println("Category: " + entry.getKey() + ", Total Expenses: $" + entry.getValue());
        }
    }

    public void saveExpensesToFile(String fileName) throws IOException {
        try (FileWriter writer = new FileWriter(fileName)) {
            for (Expense expense : expenses) {
                writer.write(expense.toString() + "\n");
            }
        }
    }
}

public class ExpenseTrackerApp {
    public static void main(String[] args) {
        ExpenseTracker expenseTracker = new ExpenseTracker();
        Scanner scanner = new Scanner(System.in);

        // Basic user interface
        System.out.println("Expense Tracker");
        System.out.println("Enter 'quit' to exit.");

        while (true) {
            System.out.print("Enter date (YYYY-MM-DD): ");
            String date = scanner.nextLine();
            if (date.equals("quit")) break;

            System.out.print("Enter category: ");
            String category = scanner.nextLine();
            if (category.equals("quit")) break;

            System.out.print("Enter amount: ");
            double amount = scanner.nextDouble();
            scanner.nextLine(); // Consume newline

            // Create Expense object and add it to the expense tracker
            expenseTracker.addExpense(new Expense(date, category, amount));
        }

        // Display all expenses
        System.out.println("All Expenses:");
        expenseTracker.displayExpenses();

        // Display category-wise total expenses
        System.out.println("\nCategory-wise Total Expenses:");
        expenseTracker.displayCategoryTotal();

        // Save expenses to a file
        try {
            expenseTracker.saveExpensesToFile("expenses.txt");
            System.out.println("Expenses saved to expenses.txt");
        } catch (IOException e) {
            System.out.println("Error saving expenses: " + e.getMessage());
        }

        scanner.close();
    }
}
